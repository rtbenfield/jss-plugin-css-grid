version: 2.1

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:lts

jobs:
  test:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      # Check formatting
      - run:
          name: Check formatting
          command: npm run check

      # Run tests
      - run:
          name: Run tests
          command: npm test -- --ci --coverage --no-cache
          environment:
            JEST_JUNIT_OUTPUT: "./test-results/jest/results.xml"

      # Publish test results
      - store_test_results:
          path: test-results

      # Publish test coverage as artifact
      - store_artifacts:
          path: coverage
          destination: coverage

      - persist_to_workspace:
          root: ~/repo
          paths: .
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      # Compile TypeScript
      - run:
          name: Build
          command: npm run build

      # Publish JavaScript artifacts
      - store_artifacts:
          path: dist
          destination: dist

      - persist_to_workspace:
          root: ~/repo
          paths: .
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  test-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - hold:
          type: approval
          requires:
            - test
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - hold
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
